% References


@article{DBLP:journals/tcs/Girard87,
  author    = {Jean{-}Yves Girard},
  title     = {Linear Logic},
  journal   = {Theor. Comput. Sci.},
  volume    = {50},
  pages     = {1--102},
  year      = {1987}
}


@book{prawitznd65,
 author = {Dag Prawitz},
 title = {Natural Deduction},
 publisher = {Almquist \& Wiksell},
 year = {1965}
}



@inproceedings{DBLP:conf/lics/LincolnSS95,
  author       = {Patrick Lincoln and
                  Andre Scedrov and
                  Natarajan Shankar},
  title        = {Decision Problems for Second-Order Linear Logic},
  booktitle    = {Proceedings, 10th Annual {IEEE} Symposium on Logic in Computer Science,
                  San Diego, California, USA, June 26-29, 1995},
  pages        = {476--485},
  publisher    = {{IEEE} Computer Society},
  year         = {1995},
  url          = {https://doi.org/10.1109/LICS.1995.523281},
  doi          = {10.1109/LICS.1995.523281},
  timestamp    = {Fri, 24 Mar 2023 00:01:50 +0100},
  biburl       = {https://dblp.org/rec/conf/lics/LincolnSS95.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}




@article{DBLP:journals/mscs/CairesPT16,
  author    = {Lu{\'{\i}}s Caires and
               Frank Pfenning and
               Bernardo Toninho},
  title     = {Linear logic propositions as session types},
  journal   = {Mathematical Structures in Computer Science},
  volume    = {26},
  number    = {3},
  pages     = {367--423},
  year      = {2016}
}


@inproceedings{DBLP:conf/concur/CairesP10,
  author    = {Lu{\'{\i}}s Caires and
               Frank Pfenning},
  title     = {Session Types as Intuitionistic Linear Propositions},
  booktitle = {{CONCUR} 2010},
  pages     = {222--236},
  year      = {2010}
}


@article{DBLP:journals/jfp/Wadler14,
  author    = {Philip Wadler},
  title     = {Propositions as sessions},
  journal   = {J. Funct. Program.},
  volume    = {24},
  number    = {2-3},
  pages     = {384--418},
  year      = {2014}
}

@inproceedings{DBLP:conf/cade/ChaudhuriP05,
  author    = {Kaustuv Chaudhuri and
               Frank Pfenning},
  title     = {A Focusing Inverse Method Theorem Prover for First-Order Linear Logic},
  booktitle = {Automated Deduction - CADE-20, 20th International Conference on Automated
               Deduction, Tallinn, Estonia, July 22-27, 2005, Proceedings},
  pages     = {69--83},
  year      = {2005},
  url       = {https://doi.org/10.1007/11532231\_6},
  doi       = {10.1007/11532231\_6},
  timestamp = {Tue, 14 May 2019 10:00:39 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/cade/ChaudhuriP05},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/tcs/LiangM09,
  author    = {Chuck Liang and
               Dale Miller},
  title     = {Focusing and polarization in linear, intuitionistic, and classical
               logics},
  journal   = {Theor. Comput. Sci.},
  volume    = {410},
  number    = {46},
  pages     = {4747--4768},
  year      = {2009},
  url       = {https://doi.org/10.1016/j.tcs.2009.07.041},
  doi       = {10.1016/j.tcs.2009.07.041},
  timestamp = {Sun, 12 Nov 2017 16:01:31 +0100},
  biburl    = {https://dblp.org/rec/bib/journals/tcs/LiangM09},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/lics/LiangM09,
  author    = {Chuck Liang and
               Dale Miller},
  title     = {A Unified Sequent Calculus for Focused Proofs},
  booktitle = {Proceedings of the 24th Annual {IEEE} Symposium on Logic in Computer
               Science, {LICS} 2009, 11-14 August 2009, Los Angeles, CA, {USA}},
  pages     = {355--364},
  year      = {2009},
  url       = {https://doi.org/10.1109/LICS.2009.47},
  doi       = {10.1109/LICS.2009.47},
  timestamp = {Sun, 12 Nov 2017 16:01:30 +0100},
  biburl    = {https://dblp.org/rec/bib/conf/lics/LiangM09},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{10.1093/logcom/2.3.297,
    author = {Andreoli, Jean-Marc},
    title = "{Logic Programming with Focusing Proofs in Linear Logic}",
    journal = {Journal of Logic and Computation},
    volume = {2},
    number = {3},
    pages = {297-347},
    year = {1992},
    month = {06},
    issn = {0955-792X},
    doi = {10.1093/logcom/2.3.297},
    url = {https://doi.org/10.1093/logcom/2.3.297},
    }

@article{DBLP:journals/tcs/CervesatoHP00,
  author    = {Iliano Cervesato and
               Joshua S. Hodas and
               Frank Pfenning},
  title     = {Efficient resource management for linear logic proof search},
  journal   = {Theor. Comput. Sci.},
  volume    = {232},
  number    = {1-2},
  pages     = {133--163},
  year      = {2000},
  url       = {https://doi.org/10.1016/S0304-3975(99)00173-5},
  doi       = {10.1016/S0304-3975(99)00173-5},
  timestamp = {Sun, 28 May 2017 13:20:00 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/tcs/CervesatoHP00},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/lics/CervesatoP97,
  author    = {Iliano Cervesato and
               Frank Pfenning},
  title     = {Linear Higher-Order Pre-Unification},
  booktitle = {Proceedings, 12th Annual {IEEE} Symposium on Logic in Computer Science,
               Warsaw, Poland, June 29 - July 2, 1997},
  pages     = {422--433},
  year      = {1997},
  url       = {https://doi.org/10.1109/LICS.1997.614967},
  doi       = {10.1109/LICS.1997.614967},
  timestamp = {Thu, 25 May 2017 00:42:40 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/lics/CervesatoP97},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/pldi/KnothWP019,
  author    = {Tristan Knoth and
               Di Wang and
               Nadia Polikarpova and
               Jan Hoffmann},
  title     = {Resource-guided program synthesis},
  booktitle = {Proceedings of the 40th {ACM} {SIGPLAN} Conference on Programming
               Language Design and Implementation, {PLDI} 2019, Phoenix, AZ, USA,
               June 22-26, 2019.},
  pages     = {253--268},
  year      = {2019},
  url       = {https://doi.org/10.1145/3314221.3314602},
  doi       = {10.1145/3314221.3314602},
  timestamp = {Sun, 09 Jun 2019 19:00:05 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/pldi/KnothWP019},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}



@inproceedings{DBLP:conf/lopstr/HughesO20,
  author    = {Jack Hughes and
               Dominic Orchard},
  editor    = {Maribel Fern{\'{a}}ndez},
  title     = {Resourceful Program Synthesis from Graded Linear Types},
  booktitle = {Logic-Based Program Synthesis and Transformation - 30th International
               Symposium, {LOPSTR} 2020, Bologna, Italy, September 7-9, 2020, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {12561},
  pages     = {151--170},
  publisher = {Springer},
  year      = {2020},
  url       = {https://doi.org/10.1007/978-3-030-68446-4\_8},
  doi       = {10.1007/978-3-030-68446-4\_8},
  timestamp = {Tue, 02 Mar 2021 11:26:26 +0100},
  biburl    = {https://dblp.org/rec/conf/lopstr/HughesO20.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/pldi/PolikarpovaKS16,
  author    = {Nadia Polikarpova and
               Ivan Kuraj and
               Armando Solar{-}Lezama},
  title     = {Program synthesis from polymorphic refinement types},
  booktitle = {Proceedings of the 37th {ACM} {SIGPLAN} Conference on Programming
               Language Design and Implementation, {PLDI} 2016, Santa Barbara, CA,
               USA, June 13-17, 2016},
  pages     = {522--538},
  year      = {2016},
  url       = {https://doi.org/10.1145/2908080.2908093},
  doi       = {10.1145/2908080.2908093},
  timestamp = {Tue, 06 Nov 2018 16:59:30 +0100},
  biburl    = {https://dblp.org/rec/bib/conf/pldi/PolikarpovaKS16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/pldi/OseraZ15,
  author    = {Peter{-}Michael Osera and
               Steve Zdancewic},
  editor    = {David Grove and
               Stephen M. Blackburn},
  title     = {Type-and-example-directed program synthesis},
  booktitle = {Proceedings of the 36th {ACM} {SIGPLAN} Conference on Programming
               Language Design and Implementation, Portland, OR, USA, June 15-17,
               2015},
  pages     = {619--630},
  publisher = {{ACM}},
  year      = {2015},
  url       = {https://doi.org/10.1145/2737924.2738007},
  doi       = {10.1145/2737924.2738007},
  timestamp = {Thu, 04 Mar 2021 07:51:56 +0100},
  biburl    = {https://dblp.org/rec/conf/pldi/OseraZ15.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/popl/FrankleOWZ16,
  author    = {Jonathan Frankle and
               Peter{-}Michael Osera and
               David Walker and
               Steve Zdancewic},
  editor    = {Rastislav Bod{\'{\i}}k and
               Rupak Majumdar},
  title     = {Example-directed synthesis: a type-theoretic interpretation},
  booktitle = {Proceedings of the 43rd Annual {ACM} {SIGPLAN-SIGACT} Symposium on
               Principles of Programming Languages, {POPL} 2016, St. Petersburg,
               FL, USA, January 20 - 22, 2016},
  pages     = {802--815},
  publisher = {{ACM}},
  year      = {2016},
  url       = {https://doi.org/10.1145/2837614.2837629},
  doi       = {10.1145/2837614.2837629},
  timestamp = {Tue, 06 Nov 2018 11:07:43 +0100},
  biburl    = {https://dblp.org/rec/conf/popl/FrankleOWZ16.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/pacmpl/PolikarpovaS19,
  author    = {Nadia Polikarpova and
               Ilya Sergey},
  title     = {Structuring the synthesis of heap-manipulating programs},
  journal   = {{PACMPL}},
  volume    = {3},
  number    = {{POPL}},
  pages     = {72:1--72:30},
  year      = {2019},
  url       = {https://doi.org/10.1145/3290385},
  doi       = {10.1145/3290385},
  timestamp = {Fri, 10 May 2019 11:01:57 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/pacmpl/PolikarpovaS19},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/cacm/Wadler15,
  author    = {Philip Wadler},
  title     = {Propositions as types},
  journal   = {Commun. {ACM}},
  volume    = {58},
  number    = {12},
  pages     = {75--84},
  year      = {2015},
  url       = {https://doi.org/10.1145/2699407},
  doi       = {10.1145/2699407},
  timestamp = {Wed, 14 Nov 2018 10:22:36 +0100},
  biburl    = {https://dblp.org/rec/journals/cacm/Wadler15.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{10.5555/509043,
    author = {Pierce, Benjamin C.},
    title = {Types and Programming Languages},
    year = {2002},
    isbn = {0262162091},
    publisher = {The MIT Press},
    edition = {1st},
    abstract = {A type system is a syntactic method for automatically checking the absence of certain erroneous behaviors by classifying program phrases according to the kinds of values they compute. The study of type systems -- and of programming languages from a type-theoretic perspective -- has important applications in software engineering, language design, high-performance compilers, and security.This text provides a comprehensive introduction both to type systems in computer science and to the basic theory of programming languages. The approach is pragmatic and operational; each new concept is motivated by programming examples and the more theoretical sections are driven by the needs of implementations. Each chapter is accompanied by numerous exercises and solutions, as well as a running implementation, available via the Web. Dependencies between chapters are explicitly identified, allowing readers to choose a variety of paths through the material.The core topics include the untyped lambda-calculus, simple type systems, type reconstruction, universal and existential polymorphism, subtyping, bounded quantification, recursive types, kinds, and type operators. Extended case studies develop a variety of approaches to modeling the features of object-oriented languages.}
}

@misc{chen2021evaluating,
      title={Evaluating Large Language Models Trained on Code},
      author={Mark Chen and Jerry Tworek and Heewoo Jun and Qiming Yuan and Henrique Ponde de Oliveira Pinto and Jared Kaplan and Harri Edwards and Yuri Burda and Nicholas Joseph and Greg Brockman and Alex Ray and Raul Puri and Gretchen Krueger and Michael Petrov and Heidy Khlaaf and Girish Sastry and Pamela Mishkin and Brooke Chan and Scott Gray and Nick Ryder and Mikhail Pavlov and Alethea Power and Lukasz Kaiser and Mohammad Bavarian and Clemens Winter and Philippe Tillet and Felipe Petroski Such and Dave Cummings and Matthias Plappert and Fotios Chantzis and Elizabeth Barnes and Ariel Herbert-Voss and William Hebgen Guss and Alex Nichol and Alex Paino and Nikolas Tezak and Jie Tang and Igor Babuschkin and Suchir Balaji and Shantanu Jain and William Saunders and Christopher Hesse and Andrew N. Carr and Jan Leike and Josh Achiam and Vedant Misra and Evan Morikawa and Alec Radford and Matthew Knight and Miles Brundage and Mira Murati and Katie Mayer and Peter Welinder and Bob McGrew and Dario Amodei and Sam McCandlish and Ilya Sutskever and Wojciech Zaremba},
      year={2021},
      eprint={2107.03374},
      archivePrefix={arXiv},
      primaryClass={cs.LG}
}

@article{Bernardy_2018,
   title={Linear Haskell: practical linearity in a higher-order polymorphic language},
   volume={2},
   ISSN={2475-1421},
   url={http://dx.doi.org/10.1145/3158093},
   DOI={10.1145/3158093},
   number={POPL},
   journal={Proceedings of the ACM on Programming Languages},
   publisher={Association for Computing Machinery (ACM)},
   author={Bernardy, Jean-Philippe and Boespflug, Mathieu and Newton, Ryan R. and Peyton Jones, Simon and Spiwack, Arnaud},
   year={2018},
   month={Jan},
   pages={1–29}
}

@inproceedings{Wadler90lineartypes,
    author = {Philip Wadler},
    title = {Linear Types Can Change the World!},
    booktitle = {PROGRAMMING CONCEPTS AND METHODS},
    year = {1990},
    publisher = {North}
}

@Misc{sili_repo,
  Title                    = {The {SILI} synthesizer},
  Author                   = {Rodrigo Mesquita and Bernardo Toninho},
  HowPublished             = {\url{https://github.com/alt-romes/slfl}},
  Month                    = {July},
  Year                     = {2021},
}

@Misc{fpnotes,
  Title                    = {Focus Handouts},
  Author                   = {Frank Pfenning},
  HowPublished             = {\url{https://www.cs.cmu.edu/~fp/courses/15816-f01/handouts/focus.pdf}},
}


@Misc{sbv,
  Title                    = {sbv: SMT Based Verification: Symbolic Haskell theorem prover using SMT solving.},
  HowPublished             = {\url{https://hackage.haskell.org/package/sbv}},
}

@Misc{logict,
  Title                    = {logict: A backtracking logic-programming monad.},
  HowPublished             = {\url{https://hackage.haskell.org/package/logict}},
}

@Misc{hashable,
  Title                    = {hashable: A class for types that can be converted to a hash value},
  HowPublished             = {\url{https://hackage.haskell.org/package/hashable}},
}

@incollection {curry:34,
    author    = {H.B. Curry},
    journal = {Proceedings of the National Academy of Sciences},
    title     = {Functionality in Combinatory Logic},
    year      = {1934},
    volume = {20},
    number = {11},
   pages = {584-590},
   doi = {10.1073/pnas.20.11.584},
   address   = {Department of Mathematics, The Pennsylvania State College},
 }

@incollection{howard:80,
  author =       {William A. Howard},
  journal = {To H.B. Curry: Essays on Combinatory Logic, Lambda Calculus and Formalism},
  title =  {The Formulae-as-types notion of construction},
  year =         {1980 (originally circulated 1969)},
  pages =        "479-490",
  ISBN = {978-0-12-349050-6}
}

@article{DBLP:journals/jar/Chargueraud12,
  author    = {Arthur Chargu{'{e}}raud},
  title     = {The Locally Nameless Representation},
  journal   = {J. Autom. Reason.},
  volume    = {49},
  number    = {3},
  pages     = {363--408},
  year      = {2012},
  url       = {https://doi.org/10.1007/s10817-011-9225-2},
  doi       = {10.1007/s10817-011-9225-2},
  timestamp = {Wed, 02 Sep 2020 13:30:05 +0200},
  biburl    = {https://dblp.org/rec/journals/jar/Chargueraud12.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org/}
}

@article{DBLP:journals/jcss/Milner78,
  author    = {Robin Milner},
  title     = {A Theory of Type Polymorphism in Programming},
  journal   = {J. Comput. Syst. Sci.},
  volume    = {17},
  number    = {3},
  pages     = {348--375},
  year      = {1978},
  url       = {https://doi.org/10.1016/0022-0000(78)90014-4},
  doi       = {10.1016/0022-0000(78)90014-4},
  timestamp = {Tue, 16 Feb 2021 14:04:22 +0100},
  biburl    = {https://dblp.org/rec/journals/jcss/Milner78.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org/}
}

@article{10.2307/1995158,
 ISSN = {00029947},
 URL = {http://www.jstor.org/stable/1995158},
 author = {R. Hindley},
 journal = {Transactions of the American Mathematical Society},
 pages = {29--60},
 publisher = {American Mathematical Society},
 title = {The Principal Type-Scheme of an Object in Combinatory Logic},
 volume = {146},
 year = {1969}
}

@article{10.1145/3408991,
  author = {Lubin, Justin and Collins, Nick and Omar, Cyrus and Chugh, Ravi},
  title = {Program Sketching with Live Bidirectional Evaluation},
  year = {2020},
  issue_date = {August 2020},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {4},
  number = {ICFP},
  url = {https://doi.org/10.1145/3408991},
  doi = {10.1145/3408991},
  abstract = {We present a system called Smyth for program sketching in a typed functional language whereby the concrete evaluation of ordinary assertions gives rise to input-output examples, which are then used to guide the search to complete the holes. The key innovation, called live bidirectional evaluation, propagates examples "backward" through partially evaluated sketches. Live bidirectional evaluation enables Smyth to (a) synthesize recursive functions without trace-complete sets of examples and (b) specify and solve interdependent synthesis goals. Eliminating the trace-completeness requirement resolves a significant limitation faced by prior synthesis techniques when given partial specifications in the form of input-output examples. To assess the practical implications of our techniques, we ran several experiments on benchmarks used to evaluate Myth, a state-of-the-art example-based synthesis tool. First, given expert examples (and no partial implementations), we find that Smyth requires on average 66% of the number of expert examples required by Myth. Second, we find that Smyth is robust to randomly-generated examples, synthesizing many tasks with relatively few more random examples than those provided by an expert. Third, we create a suite of small sketching tasks by systematically employing a simple sketching strategy to the Myth benchmarks; we find that user-provided sketches in Smyth often further reduce the total specification burden (i.e. the combination of partial implementations and examples). Lastly, we find that Leon and Synquid, two state-of-the-art logic-based synthesis tools, fail to complete several tasks on which Smyth succeeds.},
  journal = {Proc. ACM Program. Lang.},
  month = {aug},
  articleno = {109},
  numpages = {29},
  keywords = {Bidirectional Evaluation, Program Synthesis, Examples, Sketches}
}

