a :: forall a b c . ((a -> (b -> c)) -> ((a * b) -> c));
a a b = let c*d = b in a c d;

b :: forall a b c . (((a * b) -> c) -> (a -> (b -> c)));
b a b c = a (b, c);

c :: forall a b c . ((a -> (b & c)) -> ((a -> b) & (a -> c)));
c a = ( (位b -> (fst (a b))) | (位e -> (snd (a e))) );

d :: forall a b c . (((a -> b) & (a -> c)) -> (a -> (b & c)));
d a b = ( (fst a) b | (snd a) b );

e :: forall a b c . (((c + a) -> b) -> ((c -> b) & (a -> b)));
e a = ( (位b -> a inl b) | (位d -> a inr d) );

f :: forall a b c . (((a -> c) & (b -> c)) -> ((a + b) -> c));
f a b = case b of 
      inl c -> (fst a) c
    | inr d -> (snd a) d;

g :: forall a b . (!(a & b) -> (!a * !b));
g a = let !b = a in ((!(fst b)), (!(snd b)));

h :: forall a b . ((!b * !a) -> !(b & a));
h a = let b*c = a in 
    let !d = c in 
        let !e = b in (!( e | d ));

i :: forall a . ((a * 1) -> a);
i a = let b*c = a in 
    let _ = c in b;

j :: forall a . (a -> (a * 1));
j a = (a, ());

k :: forall a b . ((a & b) -> a);
k a = (fst a);

l :: forall a . (a -> (a & a));
l a = ( a | a );


