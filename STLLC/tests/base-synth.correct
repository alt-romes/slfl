main a b = let c*d = b in a c d;

main a b c = a (b, c);

main a = ( 位b -> (fst (a b)) | 位e -> (snd (a e)) );

main a b = ( (fst a) b | (snd a) b );

main a = ( 位b -> a inl b | 位d -> a inr d );

main a b = case b of
    inl c -> (fst a) c | inr d -> (snd a) d;

main a = let !b = a in
  ((!(fst b)), (!(snd b)));

main a = let b*c = a in
  let !d = c in
    let !e = b in (!( e | d ));

main a = let b*c = a in let _ = c in b;

main a = (a, ());

main a = (fst a);

main a = ( a | a );

main a = let !b = a in
  (!let !c = b in c);

main a = let !b = a in (!(!b));

