a = (λa -> (λb -> let c*d = b in a c d));
b = (λa -> (λb -> (λc -> a ( b , c ))));
c = (λa -> ( (λb -> fst (a b)) | (λe -> snd (a e)) ));
d = (λa -> (λb -> ( (fst a) b | (snd a) b )));
e = (λa -> ( (λb -> a inl b ) | (λd -> a inr d ) ));
f = (λa -> (λb -> case b of
              inl c -> (fst a) c
            | inr d -> (snd a) d));
g = (λa -> let !b = a in ( ! fst b , ! snd b ));
h = (λa ->
    let b*c = a in
        let !d = c in
            let !e = b in ! ( e | d ));
i = (λa -> let b*c = a in let _ = c in b);
j = (λa -> ( a , () ));
k = (λa -> fst a);
l = (λa -> ( a | a ));
